services:
# ────────────────────────────────  DB
  db:
    image: postgres:15
    container_name: lime_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: limeuser
      POSTGRES_PASSWORD: strongpassword
      POSTGRES_DB: limedb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: [internal]

# ────────────────────────────────  API
  api:
    build:
      context: ./backend
    container_name: api
    restart: unless-stopped
    depends_on: [db]
    expose:
      - "8000"                         # Caddy reaches it on the proxy net
    environment:
      DATABASE_URL: postgres://limeuser:strongpassword@db:5432/limedb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks: [internal, proxy]

# ────────────────────────────────  SPA
  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_BASE: "https://api.hobbyhosting.org"   # baked in at build-time
    container_name: lime_frontend
    restart: unless-stopped
    expose:
      - "3000"
    networks: [proxy]

# ────────────────────────────────  Reverse-proxy (Caddy)
  caddy:
    image: caddy:2-alpine
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile   # create this file next to compose.yml
      - caddy_data:/data                   # TLS certs / state
      - caddy_config:/config
    networks: [proxy]

# ────────────────────────────────  Storage & nets
volumes:
  postgres_data:
  caddy_data:
  caddy_config:

networks:
  internal:
  proxy:
