version: "3.9"

services:
  db:
    image: postgres:15
    container_name: lime_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: limeuser
      POSTGRES_PASSWORD: strongpassword
      POSTGRES_DB: limedb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: lime_backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgres://limeuser:strongpassword@db:5432/limedb
    networks:
      - internal
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.hobbyhosting.org`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3


  frontend:
    build:
      context: ./frontend
    container_name: lime_frontend
    restart: unless-stopped
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`hobbyhosting.org`,`www.hobbyhosting.org`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--api.insecure=true"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - proxy

volumes:
  postgres_data:

networks:
  internal:
    driver: bridge
  proxy:
    driver: bridge
